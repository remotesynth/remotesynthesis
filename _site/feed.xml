<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Remote Synthesis</title>
    <description>The blog of Brian Rinaldi, Developer Content Manager at Telerik</description>
    <link>http://remotesynthesis.com/</link>
    <atom:link href="http://remotesynthesis.com/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Jekyll Versus the Competition</title>
        <description>&lt;p&gt;On Saturday, May 2, the first ever &lt;a href=&quot;http://jekyllconf.com&quot;&gt;JekyllConf&lt;/a&gt; was held online and featured some really prominent speakers including Tom Preston-Werner and Brandon Mathis. I had the honor of opening the event with my session comparing Jekyll to other popular static site engine options including &lt;a href=&quot;http://harpjs.com&quot;&gt;Harp&lt;/a&gt;, &lt;a href=&quot;http://hexo.io/&quot;&gt;Hexo&lt;/a&gt;, &lt;a href=&quot;http://wintersmith.io/&quot;&gt;Wintersmith&lt;/a&gt;, &lt;a href=&quot;http://wintersmith.io/&quot;&gt;Hugo&lt;/a&gt; and &lt;a href=&quot;https://middlemanapp.com/&quot;&gt;Middleman&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In summary (and in my personal opinion of course), Jekyll is still in the strongest position of all the engines. It has the strongest community (partly evidenced by JekyllConf itself), the best documentation (not saying it couldn’t be better, but it’s better than the alternatives) and has the largest selection of pre-built templates and plugins.&lt;/p&gt;

&lt;p&gt;However, it has failed to reach much beyond hardcore developers. This is partly because of the nature of the tool - for instance, few people outside of the developer community enjoy working on the command line…in fact, most find it intimidating. Tooling for authors is weak too - Markdown is a terrible option for authors (who aren’t developers). We think of it as being so simple and easy, but that’s actually what makes it so complex. In terms of authoring, it covers a majority of use cases, but it is still very common to encounter requirements that it doesn’t meet (intentionally, since it’s goal was simplicity). Thus, when you teach an author Markdown, you need to teach them the syntax, what it doesn’t cover and  HTML to handle those scenarios it doesn’t cover. This is actually more complicated than simply teaching them HTML.&lt;/p&gt;

&lt;p&gt;In my opinion, until the tooling is available to allow authors and contributors to write using the tooling they love, static site engines will remain a niche solution. This is a shame as they actually seem like the optimal solution for content focused sites and, perhaps more so, documentation sites. The good news is that there are people working on the tools needed to bridge this gap…we’ll see how this goes!&lt;/p&gt;

&lt;p&gt;You can see the full session recording below or view the &lt;a href=&quot;https://www.youtube.com/watch?v=X5sJIL-nOhg&amp;amp;feature=youtu.be&amp;amp;t=9m32s&quot;&gt;full recording of the day here&lt;/a&gt;.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/vT7DhK5zbv0?list=PLrxYIq_0LFJcXlsRZD-JCdITfZexwvqsQ&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Thu, 07 May 2015 07:15:47 -0400</pubDate>
        <link>http://remotesynthesis.com/general/2015/05/07/jekyll-versus-competition/</link>
        <guid isPermaLink="true">http://remotesynthesis.com/general/2015/05/07/jekyll-versus-competition/</guid>
      </item>
    
      <item>
        <title>Tools for Writing and Converting Markdown</title>
        <description>&lt;p&gt;By now, most developers are familiar on some level with &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;. It’s become a somewhat ubiquitous part of developer tooling, probably in no small part due to it’s usage for documentation in GitHub. It also plays a big part in nearly all the major static site engines.&lt;/p&gt;

&lt;p&gt;The power of Markdown and probably a significant reason for its success is in its simplicity. But this is also its biggest weakness. Developers love Markdown because it offers a shorthand for probably 80% of their writing use cases - things like blog posts and basic documentation. For the other 20%, developers have no problem switching to straight HTML, which, of course, you can include in a Markdown file without issue.&lt;/p&gt;

&lt;p&gt;For writers and the general public however, this presents a huge obstacle. They cannot use the tools they are comfortable in writing with and they not only are forced to learn Markdown syntax, but they must learn those cases that Markdown doesn’t cover and the HTML to use in these cases. It’s multiple layers of complexity for the sake of simplicity.&lt;/p&gt;

&lt;p&gt;That being said, as Markdown becomes more widespread in its use, the tooling around it is slowly improving. I use Markdown daily and below are some of the tools that I’ve found useful in my own experience.&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;desktop-editors&quot;&gt;Desktop Editors&lt;/h2&gt;

&lt;p&gt;Most code editors such as &lt;a href=&quot;http://brackets.io/&quot;&gt;Brackets&lt;/a&gt; or &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; already include some level of Markdown support. However, if you’re looking for an editor with richer functionality geared specifically towards Markdown, then there are a number of options.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://25.io/mou/&quot;&gt;Mou&lt;/a&gt; is my current go to option for writing Markdown. As with pretty much every Markdown editor out there, you write in Markdown and have a live preview available. There is currently no option that I am aware of where you write in rich text and have it converted to Markdown.&lt;/p&gt;

&lt;p&gt;Mou offers syntax hinting and highlights as well as keyboard shortcuts, but my favorite feature (and why I prefer it) is the export. I rely heavily on the export to HTML feature and, in my experience, it has the most reliable of the editors I have tried. The only quirk I find is that it often stumbles when using backticks for code blocks (and doesn’t recognize the GitHub-flavored Markdown syntax for indicating the type of code within a code block).&lt;/p&gt;

&lt;p&gt;Currently Mou is still free, though a 1.0 looks to be forthcoming that will be paid.&lt;/p&gt;

&lt;p&gt;Another free option is &lt;a href=&quot;http://macdown.uranusjr.com/&quot;&gt;Macdown&lt;/a&gt;, which was created when Mou appeared to be ceasing development. I found it to be quite buggy, personally, but have not tried it much since its initial release.&lt;/p&gt;

&lt;p&gt;If you are on Windows, some options I’ve heard recommended include &lt;a href=&quot;http://www.texts.io/&quot;&gt;Texts&lt;/a&gt; and &lt;a href=&quot;http://markdownpad.com/&quot;&gt;MarkdownPad&lt;/a&gt;, though I have limited experience with either.&lt;/p&gt;

&lt;p&gt;Lastly, while not technically an editor, &lt;a href=&quot;https://github.com/mobily/markdown-live&quot;&gt;Markdown Live&lt;/a&gt; is a useful tool for live-previewing Markdown as you write it. Once installed, you simply change directory into the folder you want to serve up and enter &lt;code&gt;mdlive&lt;/code&gt; and it will open a preview in the browser that will update as you type - without the need to save the file. This can be useful if you prefer to use a plain text editor for writing Markdown.&lt;/p&gt;

&lt;h2 id=&quot;web-based-editors&quot;&gt;Web-based Editors&lt;/h2&gt;

&lt;p&gt;If you are looking for a free web-based option, &lt;a href=&quot;http://dillinger.io/&quot;&gt;Dillinger&lt;/a&gt; is a free (and open source) Markdown editor for the browser. It includes a live preview as well as the ability to import documents from numerous sources and export them to various formats.&lt;/p&gt;

&lt;p&gt;However, one of the things lacking in both desktop and web-based editors is collaboration. If you are working on a team, the ability to share, comment and collaborate on a document is not just useful, but necessary. &lt;a href=&quot;https://beegit.com/&quot;&gt;Beegit&lt;/a&gt; is a commercial offering that includes a number of collaboration features. My team uses it mostly for the ability to share and comment on documents as they are being developed, much as you would within Google Drive.&lt;/p&gt;

&lt;h2 id=&quot;converters&quot;&gt;Converters&lt;/h2&gt;

&lt;p&gt;When you are working with a number of contributors, it’s not always possible to force everyone to use Markdown. While Markdown’s simplicity makes it simple to manually convert short documents, converting long documents or groups of documents could get tedious and time consuming. While they aren’t perfect, in these cases, a converter can be enormously helpful.&lt;/p&gt;

&lt;p&gt;One converter that I rely on frequently is the &lt;a href=&quot;http://word-to-markdown.herokuapp.com/&quot;&gt;Word to Markdown web app&lt;/a&gt;. Simply choose your local file and hit convert. The site will post you the Markdown it generates from the file as well as a live preview. For good or for bad, it even embeds images in the document using Base64 encoding. Personally, I find this can be difficult to clean up and replace with external images, so I often remove them from the source document first and put placeholders.&lt;/p&gt;

&lt;p&gt;Word to Markdown is also available as an &lt;a href=&quot;https://github.com/benbalter/word-to-markdown&quot;&gt;open source project and command line tool&lt;/a&gt;. In my experience, I couldn’t get the command line tool to work properly for some reason, while the web app worked perfectly.&lt;/p&gt;

&lt;p&gt;In other cases, you may encounter rich text that you need converted to Markdown, such as text copy/pasted from the web or some other editor. In these situations, I’ve found &lt;a href=&quot;http://markitdown.medusis.com/&quot;&gt;Mark It Down&lt;/a&gt; to be both reliable and helpful (it is also &lt;a href=&quot;https://github.com/bambax/markitdown.medusis.com&quot;&gt;open source&lt;/a&gt;). Simply paste in the rich text and hit the convert button to get back nice, clean Markdown.&lt;/p&gt;

&lt;h2 id=&quot;other-tools&quot;&gt;Other Tools?&lt;/h2&gt;

&lt;p&gt;This is by no means a comprehensive list of Markdown tools - just the ones that I’ve personally come to rely on at some level or another. Are there any others that you recommend? Be sure to share in the comments as I’m always looking for new ones.&lt;/p&gt;
</description>
        <pubDate>Wed, 29 Apr 2015 07:15:47 -0400</pubDate>
        <link>http://remotesynthesis.com/general/2015/04/29/tools-for-writing-markdown/</link>
        <guid isPermaLink="true">http://remotesynthesis.com/general/2015/04/29/tools-for-writing-markdown/</guid>
      </item>
    
      <item>
        <title>Building Static Sites with Node.js and Wintersmith</title>
        <description>&lt;p&gt;When I’ve spoken on the topic or even when I posted my recent &lt;a href=&quot;http://developer.telerik.com/featured/getting-started-with-jekyll/&quot;&gt;guide to getting started with Jekyll&lt;/a&gt;,  the question I always get is if there is a comparable static site generator to Jekyll that is built with JavaScript and available on npm. The reason people cite is that they aren’t comfortable with Ruby and thus have trouble when they encounter problems with Jekyll or are unable to customize it completely to their needs. Well, there’s good and bad news.&lt;/p&gt;

&lt;p&gt;First, the bad news… I have found nothing comparable to Jekyll in terms of overall features, documentation and community. Now I don’t know every engine out there, but, so far, there’s nothing that even comes close to fully matching Jekyll.&lt;/p&gt;

&lt;p&gt;The good news, however, is that I found &lt;a href=&quot;http://wintersmith.io/&quot;&gt;Wintersmith&lt;/a&gt; to be a viable Jekyll replacement. It has a lot of the key features and is extensible. Plus, there are a reasonable amount of extensions out there for it already. On the other hand, the documentation is awful (let’s be honest) and the community is small. So, if you run into a problem, you’re stuck reviewing the source code. On the upside, I found the source code is pretty self-explanatory when I needed to rely on it.&lt;/p&gt;

&lt;p&gt;Given the lack of a good getting started guide in the Wintersmith documentation, I wrote a two-part series for Sitepoint that walks you through the entire process of building a site. It follows the same exact format of my &lt;a href=&quot;http://developer.telerik.com/featured/getting-started-with-jekyll/&quot;&gt;Jekyll guide&lt;/a&gt; covering everything from installation to templating, creating posts, custom metadata and custom data.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sitepoint.com/getting-started-wintersmith-nodejs-static-site-generator/&quot;&gt;Getting Started with Wintersmith: A Node.js-based Static Site Generator&lt;/a&gt; - Part 1&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sitepoint.com/creating-posts-custom-metadata-data-wintersmith/&quot;&gt;Creating Posts, Custom Metadata, and Data in Wintersmith&lt;/a&gt; - Part 2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The source code for the example is part of my &lt;a href=&quot;https://github.com/remotesynth/Static-Site-Samples&quot;&gt;Static Site Samples GitHub project&lt;/a&gt; which also includes the aforementioned Jekyll sample as well as examples for Harp and Middleman.&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Apr 2015 05:00:00 -0400</pubDate>
        <link>http://remotesynthesis.com/general/2015/04/08/building-static-sites-wintersmith/</link>
        <guid isPermaLink="true">http://remotesynthesis.com/general/2015/04/08/building-static-sites-wintersmith/</guid>
      </item>
    
      <item>
        <title>A Guide to Building Static Sites with Jekyll</title>
        <description>&lt;p&gt;As I’ve &lt;a href=&quot;http://remotesynthesis.com/general/2015/03/04/comparing-static-site-engines/&quot;&gt;posted about recently&lt;/a&gt;, I’ve been speaking a lot about comparing static site engines. There are a &lt;em&gt;ton&lt;/em&gt; of options out there (389 as of today, according to &lt;a href=&quot;https://staticsitegenerators.net/&quot;&gt;this site&lt;/a&gt;). However, based on my personal experience, I always recommend &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; - granted, that’s based on having used 5 of the 389 so far.&lt;/p&gt;

&lt;p&gt;I already have a &lt;a href=&quot;https://github.com/remotesynth/Static-Site-Samples&quot;&gt;GitHub project&lt;/a&gt; where I have built the same project multiple times with different engines as a means of comparison. The readme will guide you with installing and running each of these should you choose.&lt;/p&gt;

&lt;p&gt;Now, if you wanted to learn how to use Jekyll using this sample, I have written a &lt;a href=&quot;http://developer.telerik.com/featured/getting-started-with-jekyll/&quot;&gt;detailed guide to getting started with Jekyll&lt;/a&gt; for the Telerik Developer Network. It walks through the most common things you need to know about Liquid templating as well as how to create and build your Jekyll site.&lt;/p&gt;

&lt;p&gt;I hope you enjoy it!&lt;/p&gt;

&lt;p&gt;P.S. One common questions I get whenever I recommend Jekyll is from people who don’t know Ruby and would prefer a solution written in JavaScript/Node.js and, preferably, available via npm. The &lt;a href=&quot;https://github.com/remotesynth/Static-Site-Samples&quot;&gt;GitHub project&lt;/a&gt; includes two, Harp and Wintersmith. I have a follow up article that should be published any day now that walks through the same steps laid out in the Jekyll tutorial, but for Wintersmith. I’ll post about that as soon as it is out.&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Mar 2015 05:00:00 -0400</pubDate>
        <link>http://remotesynthesis.com/general/2015/03/24/building-static-sites-jekyll/</link>
        <guid isPermaLink="true">http://remotesynthesis.com/general/2015/03/24/building-static-sites-jekyll/</guid>
      </item>
    
      <item>
        <title>Can Web Audio be Useful?</title>
        <description>&lt;p&gt;Next month, I will be presenting at the &lt;a href=&quot;http://fluentconf.com&quot;&gt;Fluent Conference&lt;/a&gt; in San Francisco on the topic of “Practical Web Audio.” The idea here is that most every demo or presentation about web audio (including my own) have been fun and cool but not practical unless you build games or music software.&lt;/p&gt;

&lt;p&gt;So, are there useful purposes for web audio in a standard web app? I wrote an article called &lt;a href=&quot;http://developer.telerik.com/featured/adding-audio-to-web-apps/&quot;&gt;Adding Audio to Web Apps&lt;/a&gt; that begins to explore some ideas. In almost every case, the demo uses very brief portions of audio to try to add context to some form of input. Notifications seemed obvious - but, admittedly, others are harder to make a strong case for except in very specific circumstances. These were just some of my initial ideas - I have a few others and some variations to the ones I showed already that I am working on.&lt;/p&gt;

&lt;p&gt;Have you used web audio in your web app for something useful? If so, please share (and maybe I can even show it at Fluent).&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Mar 2015 05:00:00 -0400</pubDate>
        <link>http://remotesynthesis.com/general/2015/03/14/can-web-audio-be-useful/</link>
        <guid isPermaLink="true">http://remotesynthesis.com/general/2015/03/14/can-web-audio-be-useful/</guid>
      </item>
    
      <item>
        <title>Comparing Static Site Engines</title>
        <description>&lt;p&gt;On February 18, I had the pleasure of gaving a &lt;a href=&quot;http://www.meetup.com/sfhtml5/events/219180801/&quot;&gt;talk&lt;/a&gt; to the San Francisco HTML5 User Group. The topic was static site engines, covering the basics of what they are and what they are good for (or what they are not good for). The latter half of the session focused on comparing three popular static site engines: &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, &lt;a href=&quot;https://middlemanapp.com/&quot;&gt;Middleman&lt;/a&gt; and &lt;a href=&quot;http://harpjs.com/&quot;&gt;Harp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can view the presentation below (I am also giving an updated version of this presentation at &lt;a href=&quot;https://www.devnexus.com/s/index&quot;&gt;DevNexus&lt;/a&gt; in Atlanta later this month).&lt;/p&gt;

&lt;h2 id=&quot;sample-application&quot;&gt;Sample Application&lt;/h2&gt;

&lt;p&gt;In order to compare the engines, I created a simple sample site, using data from the &lt;a href=&quot;http://adventuretime.wikia.com/wiki/Adventure_Time_with_Finn_and_Jake_Wiki&quot;&gt;Adventure Time Wiki&lt;/a&gt;. The site is intentionally simple, but uses things like custom post attributes, custom global attributes, data and, of course, posts.&lt;/p&gt;

&lt;p&gt;You can get the samples as well as the slide deck &lt;a href=&quot;https://github.com/remotesynth/Static-Site-Samples&quot;&gt;on GitHub&lt;/a&gt;. I am hoping to add additional samples in the coming weeks.&lt;/p&gt;

&lt;h2 id=&quot;recording&quot;&gt;Recording&lt;/h2&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/R-fJWOO1bjE&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Wed, 04 Mar 2015 04:00:00 -0500</pubDate>
        <link>http://remotesynthesis.com/general/2015/03/04/comparing-static-site-engines/</link>
        <guid isPermaLink="true">http://remotesynthesis.com/general/2015/03/04/comparing-static-site-engines/</guid>
      </item>
    
      <item>
        <title>Patterns of Development</title>
        <description>&lt;p&gt;Patterns are something that you cannot view close up - a narrow view obscures the pattern. However, given distance and time, we can begin to make out the sequences that repeat. This is one of the few benefits of being old, which I am compared to many developers.&lt;/p&gt;

&lt;p&gt;In this post, I am not talking about development patterns as in software design patterns (or anti-patterns), but rather patterns in attitudes and behavior among developers that change the way a large number of us approach our work.&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;front-to-back-to-front-to&quot;&gt;Front to Back to Front to…&lt;/h2&gt;

&lt;p&gt;I want to discuss a pattern I have noticed throughout my career and has only become more obvious over time. This pattern is the constant shifting in focus from front-end heavy applications to back-end heavy applications. I’m bringing the topic up becuase I believe we’re seeing a shift again, which becomes clear in recent &lt;a href=&quot;http://www.quirksmode.org/blog/archives/2015/01/the_problem_wit.html&quot;&gt;controversies over AngularJS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Basically the pattern is that every 5 to 10 years (or so), developers seem to shift in attitude and opinion on where to place much of the burden of the application - moving from placing much of the application and business logic on the front-end, to placing it on the back-end. I think a little history might make this pattern seem clear (though you can feel free to disagree with me).&lt;/p&gt;

&lt;h2 id=&quot;back-in-my-day&quot;&gt;Back in My Day…&lt;/h2&gt;

&lt;p&gt;As an old person, let me give a very oversimplified history.&lt;/p&gt;

&lt;p&gt;So, I’m not that old - really I am not. But even when I went to college it was still fairly common for many applications, especially in the enterprise, to simply be a lightweight terminal-type interface to a mainframe that had the power to run the actual application logic. In this case, obviously, the “front-end” application was little more than a text entry interface for entering commands into and receiving data back from the mainframe (which was effectively the server in this case).&lt;/p&gt;

&lt;h3 id=&quot;rich-client-server-desktops-applications&quot;&gt;Rich Client Server Desktops Applications&lt;/h3&gt;

&lt;p&gt;As PC’s became more powerful, development tools (PowerBuilder was a popular one) helped developers create more complex and interactive native applications for the desktop. While the back-end might retain a good chunk of logic, the interface itself contained a lot of interactivity and the flow of the application was based upon certain business rules. Basically, many aspects that previously had to be kept on the back-end could now be pushed to the front.&lt;/p&gt;

&lt;h3 id=&quot;early-web-applications&quot;&gt;Early Web Applications&lt;/h3&gt;

&lt;p&gt;The rise of the web changed this. Why? Well, the early web was slow and limiting in many ways. It was powerful in the sense that I no longer needed to deploy applications across multiple desktops, make sure they were updated and so on. It allowed us to interact with our applications from anywhere. However, the capabilities of the browser meant that our applications were closer to the dumb terminals of earlier days than the rich applications on the desktop. Sure, they may have looked pretty with forms and tables and blinking text, but they were mostly dumb - the application logic residing almost entirely on the server.&lt;/p&gt;

&lt;h3 id=&quot;flash-flex-silverlight&quot;&gt;Flash, Flex, Silverlight…&lt;/h3&gt;

&lt;p&gt;This didn’t change because browsers improved - at least not initially. Plugins like Flash built upon the initial attempts (like Java Applets) to give browsers the ability to create rich, desktop-like experiences on the web. Soon Flex and Silverlight were hot and much of the application and even business logic was moving back onto the client. Sure, we had to build portions of our business logic and validation twice, but the experience for the user was much improved. We called these Rich Internet Applications in part to recognize them as an attempt to recreate the interactivity of desktop applications but served in the browser.&lt;/p&gt;

&lt;h3 id=&quot;html5&quot;&gt;HTML5&lt;/h3&gt;

&lt;p&gt;This focus on the front-end didn’t change with the death of Flash and the growth of HTML5. Actually, if anything, it increased. The primary difference was that now we were writing complex, desktop-like applications in JavaScript rather than ActionScript. In fact, many back-ends became so lightweight that, in many cases, applications would connect directly to data on the cloud or in NoSQL databases.&lt;/p&gt;

&lt;h2 id=&quot;a-shift-imo&quot;&gt;A Shift (imo)&lt;/h2&gt;

&lt;p&gt;I actually wondered if we might be hitting a point where this pattern would break, but a couple of things changed as I see it.&lt;/p&gt;

&lt;p&gt;First, there’s the rise of JavaScript on the back-end using things like Node.js (or io.js if you now prefer). This isn’t because JavaScript is so awesome, but because it allowed us to write business logic and validation and such in one language and it could run on both ends - meaning, for example, I don’t have to write data validation in JavaScript on the front-end and Java (or PHP or whatever) on the back. Also, these servers are fast and built for running the types of web applications people seem to be building today.&lt;/p&gt;

&lt;p&gt;However, that isn’t the big reason. The major shift is because of mobile (of course!). As you may have seen in some of the recent AngularJS debates (among other related topics), placing too much burden for processing and logic on the front-end can make an application run poorly on mobile. And nevermind writing things like writing validation rules twice, we certainly don’t want to have to write our applications once for the desktop and then for each mobile platform. Thus, we need to move some of the code that we’d perhaps become accustomed to placing on the client back onto our back-end server…and so goes the cycle.&lt;/p&gt;

&lt;p&gt;Now, perhaps this trend will cease. Mobile devices are rapidly becoming very powerful computers in their own right. Or perhaps I am old and my mind is causing me to see patterns that don’t exist. But given the back and forth on this that I have witnessed over my career, I suspect we may be in the midst of yet another shift.&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Jan 2015 04:00:00 -0500</pubDate>
        <link>http://remotesynthesis.com/general/2015/01/21/patterns-of-development/</link>
        <guid isPermaLink="true">http://remotesynthesis.com/general/2015/01/21/patterns-of-development/</guid>
      </item>
    
      <item>
        <title>The Content Model of the Web is Broken</title>
        <description>&lt;p&gt;Print is dead. This is one of those supposed truisms we’re all lead to believe. It may or may not actually be true, but if print isn’t dead, it’s not healthy. This is especially true when it comes to news and information. Magazines and newspapers are failing all over the place.&lt;/p&gt;

&lt;p&gt;However, what you may not realize is that this same type of information is dying on the web as well. Sites are disappearing and the ones that aren’t, in large part, don’t make money off their content. Basically, as of right now, the content model of the web is thoroughly broken, and you are paying the price.&lt;/p&gt;

&lt;p&gt;In this post, I’ll speak mostly about sites that focus on content around technology and development, but I think much of this could apply to most any topic area. Keep in mind this is, obviously, all just my personal opinion and some of the information is based on speculation about certain business models.&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-symptoms&quot;&gt;The Symptoms&lt;/h2&gt;

&lt;p&gt;Some popular developer and technology sites have begun to close such as &lt;a href=&quot;http://www.drdobbs.com/architecture-and-design/farewell-dr-dobbs/240169421&quot;&gt;Dr. Dobb’s&lt;/a&gt; and &lt;a href=&quot;http://www.h-online.com/news/item/The-H-is-closing-down-1920027.html&quot;&gt;The H&lt;/a&gt;, to name a couple of recent ones. While these may not seem like horrible losses, I think they are essentially the canary in the coal mine.&lt;/p&gt;

&lt;p&gt;In fact, other sites you may care about more, such as &lt;a href=&quot;http://blog.sfgate.com/techchron/2014/09/10/macworld-kills-print-edition-amid-layoffs-at-idg/&quot;&gt;MacWorld&lt;/a&gt;, InfoQ (run by C4Media) and SD Times (run by BZ Media) have also had to adjust their online businesses to adjust to changing times.&lt;/p&gt;

&lt;p&gt;These are just a few examples, and by no means a comprehensive list.&lt;/p&gt;

&lt;h2 id=&quot;what-changed&quot;&gt;What changed?&lt;/h2&gt;

&lt;p&gt;There’s simply no money in advertising for content sites. Ad networks, most notably Google, don’t pay what they once did. Direct advertising dollars are now very hard to come by.&lt;/p&gt;

&lt;p&gt;I used to run a site called Flippin’ Awesome (now called &lt;a href=&quot;http://modernweb.com&quot;&gt;Modern Web&lt;/a&gt;), and I can tell you first-hand that the amount of money available for ads was paltry - especially when placed against the amount of space they occupy (and the nuisance they are). Sure, I only got a couple hundred thousand page views a month, but that netted me generally less than $300/mo. Once you factor in the costs of hosting/running the site, plus my time, this was not a profitable venture by any means.&lt;/p&gt;

&lt;h2 id=&quot;the-three-types-of-surviving-sites&quot;&gt;The Three Types of Surviving Sites&lt;/h2&gt;

&lt;p&gt;Of course, many sites still survive, but mostly because of trade offs that you may or may not be aware of.&lt;/p&gt;

&lt;h3 id=&quot;no-longer-really-about-written-content&quot;&gt;1. No Longer Really About Written Content&lt;/h3&gt;

&lt;p&gt;Many sites survive because their content is really simply a means of promoting their actual revenue generating side of the business. For example, sites like Smashing Magazine, A List Apart and InfoQ (to name a few off the top of my head), primarily serve as promotional vehicles for their conferences, which make money (I know no financial details - I’m purely speculating).&lt;/p&gt;

&lt;p&gt;While this doesn’t mean that their content isn’t still for the most part very good, it does mean that it isn’t the driving force of their business. This can mean they cut down on publishing, cut down on paying writers, cut down on other things (editorial, technical editing) or some combination of all three. &lt;/p&gt;

&lt;p&gt;In the end, however, if you’re site is just promotion expense for some other part of the business, cutting either quality or quantity helps keep the costs manageable.&lt;/p&gt;

&lt;h3 id=&quot;corporate-sponsored&quot;&gt;2. Corporate Sponsored&lt;/h3&gt;

&lt;p&gt;I have some experience in this area as I used to run part of the Adobe Developer Connection (ADC) and now run the Telerik Developer Network. This type of site is similar to the first in that its primary purpose is actually as a promotional vehicle for something else - in this case, to sell you the products and/or services of the company that runs it.&lt;/p&gt;

&lt;p&gt;This also doesn’t mean the content is bad. In fact, these types of sites often have the budget to properly compensate authors (or compensate them at all). Paying authors makes it easier to get good authors.&lt;/p&gt;

&lt;p&gt;Nonetheless, these sites have a clear cut agenda which is to benefit the company footing the bill (that makes sense - it’s not a criticism). The content is only as independent as the company behind it chooses (I’ve been lucky in this sense to have always had freedom). In addition, the site is at the whims of the company - thus, one day the ADC was growing and healthy, the next day it was effectively dead. Running these sorts of sites is not cheap and its impact on sales is tenuous to track (I think they are important, but it can be hard to find a direct link to actual sales).&lt;/p&gt;

&lt;h3 id=&quot;they-rely-on-free-content&quot;&gt;3. They Rely on Free Content&lt;/h3&gt;

&lt;p&gt;This type of site doesn’t always even exist to be profitable would include most blogs but also sites like my old site (at least when I ran it) and even sites like Huffington Post, who often rely on free or reprinted content, especially outside their main areas.&lt;/p&gt;

&lt;p&gt;The problem with free content is that it isn’t always the best quality. I spent a lot of time working on articles and with authors to make sure the content on Flippin’ Awesome was worthy of printing. I also had to reject countless submissions, many of which were the article equivalent of spam. Many sites don’t have the time, money or interest to do this.&lt;/p&gt;

&lt;p&gt;Other sites, like most blogs, rely on the generosity of their authors. However, this means that a) their’s usually no one reviewing what they wite and b) it’s rarely a top priority, and often die.&lt;/p&gt;

&lt;h2 id=&quot;weve-thoroughly-devalued-content-and-writers&quot;&gt;We’ve Thoroughly Devalued Content and Writers&lt;/h2&gt;

&lt;p&gt;I hate to say it, but the reason behind all this is that we, the consumers, want our content to be free. Not only that, we also think it should be free of obnoxious ads. This means that, even the sites of types 1 and 2 above, pay authors crap. Let’s be honest, no author is making a living on writing articles at $200-300 a pop (which is more or less the going rate). Sure, it’s better than nothing, but other motivations have to come into play.&lt;/p&gt;

&lt;p&gt;Personally, I worry that this model is only going to further deteriorate. If you want to make money on content given the money there is on advertising, you either have to produce gobs of content (and raise your page views based on volume) or you use link-bait (and raise your page views based on trickery). Often, it is a combination of both.&lt;/p&gt;

&lt;p&gt;In either case, the quality is what suffers and you pay the price. So the next time you do a Google search and the top 10 articles are filled with link-bait junk written by content farms, just think that this may only get worse.&lt;/p&gt;
</description>
        <pubDate>Fri, 16 Jan 2015 04:00:00 -0500</pubDate>
        <link>http://remotesynthesis.com/general/2015/01/16/content-model-of-web-is-broken/</link>
        <guid isPermaLink="true">http://remotesynthesis.com/general/2015/01/16/content-model-of-web-is-broken/</guid>
      </item>
    
      <item>
        <title>Best Music of 2014</title>
        <description>&lt;p&gt;One of my New Year’s resolutions was to write and blog more - and that doesn’t mean just on technical topics but also on topics I am generally interested in. I just need to get in the habit of writing more, generally speaking.&lt;/p&gt;

&lt;p&gt;Anyway, any of you who know me know that I am a big fan of music. In fact, until about mid-2013 I was doing a bi-weekly Internet radio show (called Vitamin Sweet) focused only on new music. If you’d listened to that show you might Charli XCX in Februrary of 2013, Foxes in May 2013 and Lorde in July 2013, among others who later became famous.&lt;/p&gt;

&lt;p&gt;Along those lines, before 2015 got too far along, I wanted to share my favorite music from 2014.
&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;magic-by-paperwhite&quot;&gt;Magic by Paperwhite&lt;/h2&gt;

&lt;p&gt;I have a habit of following bands I like on Facebook, and it has often led to fun discoveries. In this case, one of the two members of &lt;a href=&quot;https://www.facebook.com/paperwhitemusic&quot;&gt;Paperwhite&lt;/a&gt; is also in a band named Savoir Adore, which is how I learned of them. “Magic” is just an EP but there really isn’t a bad song on the entire album. If you love catchy, 80’s infused pop, this is a total winner, with the standout song being “Take Me Back.” Outstanding stuff.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/160653287&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;visual=true&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;haerts-by-haerts&quot;&gt;Haerts by Haerts&lt;/h2&gt;

&lt;p&gt;“Wings” by &lt;a href=&quot;https://www.facebook.com/haertsmusic&quot;&gt;Haerts&lt;/a&gt; was probably one of my favorite songs of 2013. It was released as a single, all by itself (as in, no B-sides or even remixes). The band slowly released new music, including their 4 song Hemiplegia EP in 2013, but 2014 finally got a full album. Sure, if you had the EP, all those songs are back again, but there’s plenty more here and every one is a winner. “Wings” is still the best song on the album, though “Call My Name” is my favorite of the songs that had not previously appeared.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/140704426&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;visual=true&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;siren-by-young-summer&quot;&gt;Siren by Young Summer&lt;/h2&gt;

&lt;p&gt;I don’t even recall how I heard of &lt;a href=&quot;https://www.facebook.com/Youngsummermusic&quot;&gt;Young Summer&lt;/a&gt;. I tend to go searching for new music here and there and have been known to download albums that I proceed to forget about without even a listen. Young Summer nearly fell into this trap for me. I was browsing my iPod and could not even recall downloading the album - boy would I have missed out. Young Summer is electronic alt-pop (if that’s a thing) that is insanely catchy - many mornings I have woken up with one of the songs in my head. My favorite is “Blood Love,” but will admit that the one that sticks in my head most often is “Taken.” If this woman doesn’t become a star soon, I will be very surprised.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/161685891&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;visual=true&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;there-for-u-by-astronomyy&quot;&gt;There for U by Astronomyy&lt;/h2&gt;

&lt;p&gt;If you are a fan of chill out, “date night” music along the lines of Rhye (or Milosh), then you will love &lt;a href=&quot;https://www.facebook.com/Astr0nomyy&quot;&gt;Astronomyy&lt;/a&gt;. As of yet, there’s no full album available, but the “There For U” EP features 4 superb songs. He also recently released a new single called “Not Into U.” Hopefully a full album is on the way. Nonetheless, I highly recommend getting everything he’s made available so far. You won’t regret it. My personal favorite is “Pack of Wolves.”&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/44973422&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;visual=true&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;days-of-abandon-by-the-pains-of-being-pure-at-heart&quot;&gt;Days of Abandon by The Pains of Being Pure at Heart&lt;/h2&gt;

&lt;p&gt;I fell in love with &lt;a href=&quot;https://www.facebook.com/ThePainsofBeingPureatHeart&quot;&gt;The Pains of Being Pure at Heart&lt;/a&gt; way back in 2009 when their debut album was my favorite album of that year. Much of the composition of the band apparently changed between 20011’s “Belong” album and this one (basically, only the band’s founder remained the same from what I recall). You could expect this to mean that the music might suffer, but “Days of Abandon” sounds like what you’d expect from the band - and that’s a great thing in my opinion. If anything, they got more accessible. You may actually recognize “Simple and Sure” (which is one of the standouts) as it was featured in some commercial, but my favorite is “Beautiful You” (though, unfortunately, this isn’t available in their SoundCloud stream).&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/136713202&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;visual=true&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;pocketknife-by-mr-little-jeans&quot;&gt;PocketKnife by Mr. Little Jeans&lt;/h2&gt;

&lt;p&gt;I love &lt;a href=&quot;https://www.facebook.com/mrlittlejeans&quot;&gt;Mr. Little Jeans&lt;/a&gt; so much that my wife (who loves her too) and I bought tickets to go see Lilly Allen just because Mr. Little Jeans was the opener (not that their is anything wrong with Lilly Allen, but we very rarely go to concerts). I’d paid too much for upper floor, standing room only tickets where we had to stand with our backs against the wall the entire time to allow people to cross in front. Somehow though, Mr. Little Jeans wasn’t there (perhaps a mistake on the &lt;a href=&quot;http://www.songkick.com/&quot;&gt;SongKick&lt;/a&gt; listing, though I did end up discovering &lt;a href=&quot;http://www.samsaya.com/&quot;&gt;Samsaya&lt;/a&gt;, who is not bad). Needless to say, we were willing to put up with a lot just because Mr. Little Jeans is great and this album is fantastic. If you’ve heard a song from it, it is “Oh Sailor,” which is a fabulous song, but my personal favorite is “Mercy” (which, unfortunately, is not embeddable on her SoundCloud stream).&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/83458007&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;visual=true&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;voices-by-phantogram&quot;&gt;Voices by Phantogram&lt;/h2&gt;

&lt;p&gt;“Voices” is the fifth album, EP or single that I’ve bought from &lt;a href=&quot;https://www.facebook.com/Phantogram/info&quot;&gt;Phantogram&lt;/a&gt; since “Eyelid Moves” in 2010. I liked every single one, but rarely loved them. Voices changed that by being much more consistently good and much more accessible (in my opinion) than their prior releases. It’s a great album and “Nothing But Trouble” is an especially great song. If you’ve enjoyed Phantogram before or even if you haven’t, you should give this album a try.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/135848748&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;visual=true&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Fri, 09 Jan 2015 04:00:00 -0500</pubDate>
        <link>http://remotesynthesis.com/general/2015/01/09/best-music-2014/</link>
        <guid isPermaLink="true">http://remotesynthesis.com/general/2015/01/09/best-music-2014/</guid>
      </item>
    
      <item>
        <title>Dealing with an Unhappy Community</title>
        <description>&lt;p&gt;Most of us deal with the “community” in our jobs on some level or another. Perhaps we are an engineer on a product that has a community of users, or work for a company that has a community of customers, or, perhaps, are in a position to be part of the public face of a company, product or service who is tasked with communicating with the community as part of your job duties.&lt;/p&gt;

&lt;p&gt;Recently, I wrote an article about a &lt;a href=&quot;http://developer.telerik.com/featured/can-angularjs-maintain-dominance/&quot;&gt;bit of a dust up in the AngularJS community&lt;/a&gt; about the plans for Angular 2.0 and it got me thinking about how we deal with the community - specifically when there is a widespread community backlash.
&lt;!--more--&gt;&lt;/p&gt;

&lt;h2 id=&quot;were-not-talking-about-trolls&quot;&gt;We’re Not Talking About Trolls&lt;/h2&gt;

&lt;p&gt;There’s a big difference between trolls, whose complaints are almost always singular in nature (and agressive in tone). In my experience, trolls complain alone and specifically target an issue that is very specific to them. In this case, I’m talking about a decision that caused widespread unhappiness in your customer base or users and is being expressed, sometimes angrily but rarely aggressively, by a large swath of your community.&lt;/p&gt;

&lt;h2 id=&quot;i-have-some-experience-in-this&quot;&gt;I Have Some Experience in This&lt;/h2&gt;

&lt;p&gt;I’ve been on both sides of community backlashes. Professionally, I was the Flash and Flex community manager at Adobe around the time of the infamous “Thoughts on Flash” essay by Steve Jobs. At the time and understandably, any actions Adobe took around Flash and Flex were heavily scrutinized. I was still a public face for the products (even if I had technically just been reorged) around the time that Adobe decided to end of life…errr…open source Flex. As you can imagine, I caught a fair share of flak.&lt;/p&gt;

&lt;p&gt;Nonetheless, I think it taught me a lot of great lessons that I’ve carried into my positions since, both for and after Adobe.&lt;/p&gt;

&lt;h2 id=&quot;the-different-kinds-of-decisions-that-cause-backlash&quot;&gt;The Different Kinds of Decisions that Cause Backlash&lt;/h2&gt;

&lt;p&gt;In my experience there are three core types of decisions (by a product team, company, open source project, etc.) that can often lead to a backlash. The first two are relatively easy to handle.&lt;/p&gt;

&lt;h3 id=&quot;necessary-decisions&quot;&gt;Necessary Decisions&lt;/h3&gt;

&lt;p&gt;Let’s face it - sometimes there are decisions that you, your company, or your product team may make that simply have to be made, but will, nonetheless, make your community unhappy. Sometimes, you, personally, don’t even like the decision. However, there’s a big difference betwen liking a decision and understanding and supporting why it was made.&lt;/p&gt;

&lt;p&gt;To me this is easy to handle as your options are very limited. You can and should be understanding of your communities right to be upset about the decision. You can communicate why the decision was necessary and, if applicable, explain that you aren’t happy either, even if you support its necessity.&lt;/p&gt;

&lt;p&gt;The last thing you can do in this case is simply develop a thick skin. You’re gonna get some lumps and that’s ok. Keep in mind that these things pass and often seem much worse in the moment than they do in retrospect.&lt;/p&gt;

&lt;h3 id=&quot;poorly-communicated-decisions&quot;&gt;Poorly Communicated Decisions&lt;/h3&gt;

&lt;p&gt;Sometimes it isn’t really what changed that upset your community but how you, your company or others communicated that decision to them. In my experience, sometimes companies spend so much time wordsmithing their communications that they remove all humanity from them - they sound like they are coming from a committee who is more concerned with protecting the company than with the impact of decisions on their customers. This (and other things) can lead to communicating a the impact of a change poorly.&lt;/p&gt;

&lt;p&gt;In this case, I also think the response is simple, if not easy, which is to clear up the miscommunication (and soften any hard feelings it may have caused). For instance, you could draft a clear and personal message expressing concern for the misunderstanding and clarifying the impact. Make this the opposite of the company-type PR response - make sure they understand that you are a part of that community and care personally about it.&lt;/p&gt;

&lt;p&gt;Of course, if you can smooth some hurt feelings with free stuff of some sort, that always helps too.&lt;/p&gt;

&lt;h3 id=&quot;best-intention-decisions&quot;&gt;“Best Intention” Decisions&lt;/h3&gt;

&lt;p&gt;What the heck do I mean by this? Well, this is kind of where AngularJS was. Sometimes decisions are made that impact our customers, users, or whatever that are made with the best intentions, but, in the end, we misread the needs of our customers/users/etc. It wasn’t that we miscommunicated. They understood - they just didn’t like what they heard.&lt;/p&gt;

&lt;p&gt;You may think these would actually be the easiest decisions to deal with - simply walk back the choice that made them unhappy. However, assuming this is the best response isn’t correct.&lt;/p&gt;

&lt;p&gt;Sometimes, as it turns out, the decision you made is the right decision for the future of the product, service, company, etc. This can get lost in the fog of loud and unhappy users. However, if you let the dust settle, it turns out that it wasn’t as big a deal as it sounded and the “mob” seemed much larger because it was loud.&lt;/p&gt;

&lt;p&gt;Sometimes, the decision was in the right direction, but it’s now up to you to translate your customer anger into adjustments to the choice (this appears to be &lt;a href=&quot;https://github.com/angular/angular/issues/133&quot;&gt;what AngularJS is doing by the way&lt;/a&gt;). You were headed down the right path, you just went a little too far or veered slightly off course. Now you just need to take a few steps back or to the right/left, and your community will be happy again.&lt;/p&gt;

&lt;p&gt;Sometimes, the decision was a poor one made with the best of intentions and should, in fact, be walked back entirely.&lt;/p&gt;

&lt;p&gt;The point is, there are many options to choose from in this case, and knowing which is the right one isn’t always easy when you are receiving a barrage of unhappy tweets, blog posts, comments and more coming your way.&lt;/p&gt;

&lt;h2 id=&quot;whatever-you-do-dont-assume-your-community-is-wrong&quot;&gt;Whatever You Do, Don’t Assume Your Community Is Wrong&lt;/h2&gt;

&lt;p&gt;Here’s the thing to recognize - in none of these cases is the community wrong. Remember, these aren’t trolls - they are community members we care about with a legitimate complaint. In case 1, they have every right to be unhappy even if there’s little we can do about it. In case 2, we communicated poorly and this led to them being unhappy. In case 3, we probably just need to adjust a little - even if the reaction may have seemed overly harsh. The single biggest mistake you can make in any of these cases is thinking you are somehow better or more enlightened than your commmunity and plowing ahead with your decisions accordingly.&lt;/p&gt;

&lt;p&gt;I’d love to hear thoughts.&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Nov 2014 04:00:00 -0500</pubDate>
        <link>http://remotesynthesis.com/general/2014/11/03/dealing-with-unhappy-communities/</link>
        <guid isPermaLink="true">http://remotesynthesis.com/general/2014/11/03/dealing-with-unhappy-communities/</guid>
      </item>
    
  </channel>
</rss>
